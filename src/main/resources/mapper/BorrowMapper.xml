<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ambow.first.dao.BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.ambow.first.entity.Borrow" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="s_r_date" property="sRDate" jdbcType="TIMESTAMP" />
    <result column="s_r_time_stamp" property="sRTimeStamp" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_id, user_id, borrow_date, s_r_date, s_r_time_stamp, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from borrow
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from borrow
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ambow.first.entity.Borrow" >
    insert into borrow (id, book_id, user_id, 
      borrow_date, s_r_date, s_r_time_stamp, 
      status)
    values (#{id,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{borrowDate,jdbcType=TIMESTAMP}, #{sRDate,jdbcType=TIMESTAMP}, #{sRTimeStamp,jdbcType=BIGINT}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ambow.first.entity.Borrow" >
    insert into borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="borrowDate != null" >
        borrow_date,
      </if>
      <if test="sRDate != null" >
        s_r_date,
      </if>
      <if test="sRTimeStamp != null" >
        s_r_time_stamp,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sRDate != null" >
        #{sRDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sRTimeStamp != null" >
        #{sRTimeStamp,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ambow.first.entity.Borrow" >
    update borrow
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sRDate != null" >
        s_r_date = #{sRDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sRTimeStamp != null" >
        s_r_time_stamp = #{sRTimeStamp,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ambow.first.entity.Borrow" >
    update borrow
    set book_id = #{bookId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      s_r_date = #{sRDate,jdbcType=TIMESTAMP},
      s_r_time_stamp = #{sRTimeStamp,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>