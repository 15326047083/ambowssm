<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ambow.first.dao.DonateMapper" >
  <resultMap id="BaseResultMap" type="com.ambow.first.entity.Donate" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
    <result column="donate_time" property="donateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_id, user_name, user_phone, donate_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from donate
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from donate
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.ambow.first.entity.Donate" >
    insert into donate (id, book_id, user_name, 
      user_phone, donate_time)
    values (#{id,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{donateTime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.ambow.first.entity.Donate" >
    insert into donate
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userPhone != null" >
        user_phone,
      </if>
      <if test="donateTime != null" >
        donate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="donateTime != null" >
        #{donateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ambow.first.entity.Donate" >
    update donate
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPhone != null" >
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="donateTime != null" >
        donate_time = #{donateTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ambow.first.entity.Donate" >
    update donate
    set book_id = #{bookId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      donate_time = #{donateTime,jdbcType=DATE}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="queryAllByDate" resultType="com.ambow.first.vo.DonateCountVo">
    select DATE_FORMAT(donate_time,'%Y-%m-%d') as donateTime,count(*) as count from donate
    <if test="start!=null and end!=null">
       where donate_time between #{start} and #{end}
    </if>
    group by donateTime
    order by donate_time asc
  </select>
  <select id="getBorrowByDate" resultType="com.ambow.first.vo.DonateCountVo">
    select DATE_FORMAT(borrow_date,'%Y-%m-%d') as donateTime,count(*) as count from borrow
    <if test="start!=null and end!=null">
    where borrow_date between #{start} and #{end}
    </if>
    group by donateTime
    order by donateTime asc
  </select>
</mapper>