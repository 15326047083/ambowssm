<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ambow.first.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.ambow.first.entity.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="new_date" property="newDate" jdbcType="TIMESTAMP" />
    <result column="out_date" property="outDate" jdbcType="TIMESTAMP" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="borrow_num" property="borrowNum" jdbcType="INTEGER" />
    <result column="password" property="password" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, age, phone, new_date, out_date, place, borrow_num, password
  </sql>

  <!--根据主键查询-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <!--根据主键删除-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <!--新增-->
  <insert id="insert" parameterType="com.ambow.first.entity.User" >
    insert into user (id, name, sex, 
      age, phone, new_date, 
      out_date, place, borrow_num, 
      password)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{newDate,jdbcType=TIMESTAMP}, 
      #{outDate,jdbcType=TIMESTAMP}, #{place,jdbcType=VARCHAR}, #{borrowNum,jdbcType=INTEGER}, 
      #{password,jdbcType=VARCHAR})
  </insert>

  <!--新增 选择-->
  <insert id="insertSelective" parameterType="com.ambow.first.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="newDate != null" >
        new_date,
      </if>
      <if test="outDate != null" >
        out_date,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="borrowNum != null" >
        borrow_num,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="newDate != null" >
        #{newDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outDate != null" >
        #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="borrowNum != null" >
        #{borrowNum,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <!--修改 -选择-->
  <update id="updateByPrimaryKeySelective" parameterType="com.ambow.first.entity.User" >
    update user
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="newDate != null" >
        new_date = #{newDate,jdbcType=TIMESTAMP},
      </if>
      <if test="outDate != null" >
        out_date = #{outDate,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="borrowNum != null" >
        borrow_num = #{borrowNum,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--根据主键修改-->
  <update id="updateByPrimaryKey" parameterType="com.ambow.first.entity.User" >
    update user
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      new_date = #{newDate,jdbcType=TIMESTAMP},
      out_date = #{outDate,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      borrow_num = #{borrowNum,jdbcType=INTEGER},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <!--根据借阅次数查询所有   DESC输出-->
  <select id="selectAllByBorrowNum" resultType="com.ambow.first.entity.User">
      select * from user order by borrow_num DESC
  </select>

  <!--根据借阅次数查询所有   加分页-->
  <select id="selectAllByBorrowNumLimit" resultType="com.ambow.first.entity.User">
      select * from user order by borrow_num DESC limit #{pageIndex},5
  </select>

  <!--查询所有-->
  <select id="selectAll" resultType="com.ambow.first.entity.User">
      select * from user
  </select>

  <!--查询所有  加分页-->
  <select id="selectAllLimit" resultType="com.ambow.first.entity.User">
      select * from user limit #{pageIndex},5
  </select>

  <!--模糊查询  加分页-->
  <select id="likeSelect" resultType="com.ambow.first.entity.User">
      select * from user
      where name like concat('%',#{selectKey},'%') or phone like concat('%',#{selectKey},'%') or place like concat('%',#{selectKey},'%')
      limit #{pageIndex},5;
</select>

  <!--根据电话号码查询用户-->
  <select id="getUserByPhone" resultType="com.ambow.first.entity.User">
      select * from user where  phone = #{phone,jdbcType=VARCHAR}
  </select>

  <!--得到表中的总数-->
<select id="getPageNumber" resultType="int">
      select count(*) from user
</select>

  <!--得到模糊查询后的结果总数-->
  <select id="getPageNumberLike" resultType="int">
      select count(*) from user
          where name like concat('%',#{selectKey},'%') or phone like concat('%',#{selectKey},'%') or place like concat('%',#{selectKey},'%')
</select>
</mapper>